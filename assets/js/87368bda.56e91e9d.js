"use strict";(self.webpackChunkmysmartnotes=self.webpackChunkmysmartnotes||[]).push([[943],{9420:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=n(5893),t=n(1151);const r={id:"rest-api-cheatsheet",title:"REST API Cheatsheet",sidebar_label:"REST API Cheatsheet",slug:"/rest-api"},o=void 0,c={id:"categories/Backend/rest-api-cheatsheet",title:"REST API Cheatsheet",description:"Welcome to the REST API Cheatsheet! This guide provides a quick reference for working with REST APIs, covering essential concepts, HTTP methods, status codes, and common best practices.",source:"@site/cheatsheets/categories/Backend/rest-api-cheatsheet.md",sourceDirName:"categories/Backend",slug:"/rest-api",permalink:"/cheatsheet/rest-api",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"rest-api-cheatsheet",title:"REST API Cheatsheet",sidebar_label:"REST API Cheatsheet",slug:"/rest-api"},sidebar:"sidebar"},l={},d=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Introduction to REST API",id:"introduction-to-rest-api",level:2},{value:"HTTP Methods",id:"http-methods",level:2},{value:"GET",id:"get",level:3},{value:"POST",id:"post",level:3},{value:"PUT",id:"put",level:3},{value:"DELETE",id:"delete",level:3},{value:"PATCH",id:"patch",level:3},{value:"OPTIONS",id:"options",level:3},{value:"HEAD",id:"head",level:3},{value:"TRACE",id:"trace",level:3},{value:"CONNECT",id:"connect",level:3},{value:"Common HTTP Status Codes",id:"common-http-status-codes",level:2},{value:"Request Headers",id:"request-headers",level:2},{value:"Response Headers",id:"response-headers",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Common Best Practices",id:"common-best-practices",level:2}];function a(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"Welcome to the REST API Cheatsheet! This guide provides a quick reference for working with REST APIs, covering essential concepts, HTTP methods, status codes, and common best practices."}),"\n",(0,i.jsx)(s.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#introduction-to-rest-api",children:"Introduction to REST API"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#http-methods",children:"HTTP Methods"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#common-http-status-codes",children:"Common HTTP Status Codes"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#request-headers",children:"Request Headers"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#response-headers",children:"Response Headers"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#authentication",children:"Authentication"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#common-best-practices",children:"Common Best Practices"})}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"introduction-to-rest-api",children:"Introduction to REST API"}),"\n",(0,i.jsx)(s.p,{children:"REST (Representational State Transfer) is an architectural style for designing networked applications. Key principles include stateless communication, resource-based URLs, and the use of standard HTTP methods."}),"\n",(0,i.jsx)(s.h2,{id:"http-methods",children:"HTTP Methods"}),"\n",(0,i.jsx)(s.h3,{id:"get",children:"GET"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Retrieve data from a specified resource."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": ",(0,i.jsx)(s.code,{children:"GET /api/users"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"post",children:"POST"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Submit data to be processed to a specified resource."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": ",(0,i.jsx)(s.code,{children:"POST /api/users"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"put",children:"PUT"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Update a resource or create a new resource if it doesn't exist."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": ",(0,i.jsx)(s.code,{children:"PUT /api/users/123"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"delete",children:"DELETE"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Delete a specified resource."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": ",(0,i.jsx)(s.code,{children:"DELETE /api/users/123"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"patch",children:"PATCH"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Apply partial modifications to a resource."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": ",(0,i.jsx)(s.code,{children:"PATCH /api/users/123"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"options",children:"OPTIONS"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Retrieve information about the communication options available for a resource."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": ",(0,i.jsx)(s.code,{children:"OPTIONS /api/users"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"head",children:"HEAD"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Retrieve the headers of a resource without the actual data."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": ",(0,i.jsx)(s.code,{children:"HEAD /api/users"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"trace",children:"TRACE"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Perform a message loop-back test along the path to the target resource."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": ",(0,i.jsx)(s.code,{children:"TRACE /api/users"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"connect",children:"CONNECT"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Description"}),": Establish a network connection to a resource (typically for SSL/TLS tunneling)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Example"}),": ",(0,i.jsx)(s.code,{children:"CONNECT /api/users"})]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"common-http-status-codes",children:"Common HTTP Status Codes"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"200 OK"}),": Successful request"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"201 Created"}),": Resource successfully created"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"204 No Content"}),": Successful request with no additional content"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"400 Bad Request"}),": Invalid request format or parameters"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"401 Unauthorized"}),": Authentication failed or not provided"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"403 Forbidden"}),": Authentication succeeded, but the authenticated user doesn't have access"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"404 Not Found"}),": Requested resource not found"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"500 Internal Server Error"}),": Server encountered an error while processing the request"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"request-headers",children:"Request Headers"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Authorization"}),": Include authentication credentials (e.g., Bearer token)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Content-Type"}),": Specify the format of the request payload (e.g., application/json)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Accept"}),": Specify the desired response format (e.g., application/json)"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"response-headers",children:"Response Headers"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Content-Type"}),": Indicates the format of the response payload"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Location"}),": URL of the newly created resource (for 201 Created status)"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Bearer Token"}),": Include a token in the ",(0,i.jsx)(s.code,{children:"Authorization"})," header for authentication."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"common-best-practices",children:"Common Best Practices"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Use Plural Nouns for Resources"}),": ",(0,i.jsx)(s.code,{children:"/api/users"})," instead of ",(0,i.jsx)(s.code,{children:"/api/user"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Versioning"}),": Include API versioning in the URL (e.g., ",(0,i.jsx)(s.code,{children:"/v1/api/users"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Consistent Endpoint Naming"}),": Follow a consistent naming convention for endpoints."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Use HTTP Status Codes Correctly"}),": Provide meaningful status codes in responses."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Pagination"}),": Implement pagination for large result sets."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"This cheatsheet covers the basics of working with REST APIs. For more detailed information, refer to the official API documentation."}),"\n",(0,i.jsx)(s.p,{children:"Happy coding!"})]})}function h(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>o});var i=n(7294);const t={},r=i.createContext(t);function o(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);